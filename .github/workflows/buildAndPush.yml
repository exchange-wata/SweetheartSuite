name: ECR push image

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - './backend/**'

jobs:
  ecr_push_and_build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Create .env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > ./backend/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" > ./backend/.env

      # AWS認証
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: 'ap-northeast-1'
          role-to-assume: 'arn:aws:iam::455866697485:role/oidc-SweetheartSuite'

      # ECR ログイン
      - uses: aws-actions/amazon-ecr-login@v1
        id: login-ecr

      - name: build and push docker image to ecr
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: 'sweetheart-suite'
        run: |
          docker compose -f ./backend/docker-compose.prd.yml build
          docker tag backend-api ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:latest

      # - name: force new deployment and wait for services stability in ECS
      #   env:
      #     CLUSTER_NAME: 'sweetheartsuite-cluster'
      #     SERVICE_NAME: 'backend'
      #   run: |
      #     aws ecs update-service --cluster ${{ env.CLUSTER_NAME }} --service ${{ env.SERVICE_NAME }} --force-new-deployment
      #     aws ecs wait services-stable --cluster ${{ env.CLUSTER_NAME }} --service ${{ env.SERVICE_NAME }}
